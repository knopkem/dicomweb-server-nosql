{"version":3,"sources":["webpack:///./components/UserPreferences/hotkeysConfig.js","webpack:///./components/UserPreferences/hotkeysValidators.js","webpack:///./components/UserPreferences/HotkeysPreferences.js","webpack:///./components/UserPreferences/WindowLevelPreferences.js","webpack:///./components/UserPreferences/GeneralPreferences.js","webpack:///./components/UserPreferences/UserPreferences.js","webpack:///./components/Header/Header.js","webpack:///./connectedComponents/ConnectedHeader.js"],"names":["MODIFIER_KEYS","DISALLOWED_COMBINATIONS","alt","shift","ctrl","formatPressedKeys","pressedKeysArray","join","ERROR_MESSAGES","hotkeysValidators","pressedKeys","length","hasError","errorMessage","lastPressedKey","includes","commandName","conflictingCommand","hotkeys","currentCommandName","firstConflictingCommand","undefined","formatedPressedHotkeys","toolHotkeys","keys","findConflictingCommand","label","modifierCommand","slice","disallowedCombination","initialState","hotkeyDefinitions","errors","validateCommandKey","validation","validator","splitHotkeys","splitedHotkeys","arrayHotkeys","Object","entries","halfwayThrough","Math","ceil","push","HotkeysPreferences","onClose","t","useTranslation","hotkeyDefaults","hotkeysManager","useState","state","setState","snackbar","useSnackbarContext","hasErrors","some","key","hasHotkeys","Fragment","className","map","index","hotkey","hotkeyDefinition","data-key","classnames","modifier_keys","handleChange","prevState","onHotkeyChanged","classNames","onResetPreferences","defaultHotKeyDefinitions","item","values","onSave","setHotkeys","localStorage","setItem","JSON","stringify","show","message","type","onCancel","propTypes","PropTypes","func","actions","redux","WindowLevelPreferences","dispatch","useDispatch","windowLevelData","useSelector","preferences","handleInputChange","event","$target","target","dataset","inputname","inputValue","value","description","data-inputname","onChange","window","level","setUserPreferences","GeneralPreferences","currentLanguage","i18n","language","availableLanguages","setLanguage","htmlFor","onLanguageChange","languages","defaultLanguage","changeLanguage","tabs","name","Component","customProps","UserPreferences","hide","Header","props","user","userManager","modal","useLargeLogo","linkPath","linkText","location","children","options","setOptions","hasLink","useEffect","optionsValue","title","icon","onClick","content","AboutContent","signoutRedirect","studyLink","to","pathname","list","align","string","bool","object","isRequired","node","defaultProps","OHIFLogo","withTranslation","withRouter","withModal","ConnectedHeader","connect","oidc"],"mappings":"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","file":"ConnectedStandaloneRouting~IHEInvokeImageDisplay~StudyListRouting~ViewerLocalFileData~ViewerRouting.bundle.a398a682ff49ee906d7a.js","sourcesContent":["const range = (start, end) => {\r\n  return new Array(end - start).fill().map((d, i) => i + start);\r\n};\r\n\r\nexport const MODIFIER_KEYS = ['ctrl', 'alt', 'shift'];\r\n\r\nexport const DISALLOWED_COMBINATIONS = {\r\n  '': [],\r\n  alt: ['space'],\r\n  shift: [],\r\n  ctrl: [\r\n    'f4',\r\n    'f5',\r\n    'f11',\r\n    'w',\r\n    'r',\r\n    't',\r\n    'o',\r\n    'p',\r\n    'a',\r\n    'd',\r\n    'f',\r\n    'g',\r\n    'h',\r\n    'j',\r\n    'l',\r\n    'z',\r\n    'x',\r\n    'c',\r\n    'v',\r\n    'b',\r\n    'n',\r\n    'pagedown',\r\n    'pageup',\r\n  ],\r\n  'ctrl+shift': ['q', 'w', 'r', 't', 'p', 'a', 'h', 'v', 'b', 'n'],\r\n};\r\n\r\nexport const SPECIAL_KEYS = {\r\n  8: 'backspace',\r\n  9: 'tab',\r\n  13: 'return',\r\n  16: 'shift',\r\n  17: 'ctrl',\r\n  18: 'alt',\r\n  19: 'pause',\r\n  20: 'capslock',\r\n  27: 'esc',\r\n  32: 'space',\r\n  33: 'pageup',\r\n  34: 'pagedown',\r\n  35: 'end',\r\n  36: 'home',\r\n  37: 'left',\r\n  38: 'up',\r\n  39: 'right',\r\n  40: 'down',\r\n  45: 'insert',\r\n  46: 'del',\r\n  96: '0',\r\n  97: '1',\r\n  98: '2',\r\n  99: '3',\r\n  100: '4',\r\n  101: '5',\r\n  102: '6',\r\n  103: '7',\r\n  104: '8',\r\n  105: '9',\r\n  106: '*',\r\n  107: '+',\r\n  109: '-',\r\n  110: '.',\r\n  111: '/',\r\n  112: 'f1',\r\n  113: 'f2',\r\n  114: 'f3',\r\n  115: 'f4',\r\n  116: 'f5',\r\n  117: 'f6',\r\n  118: 'f7',\r\n  119: 'f8',\r\n  120: 'f9',\r\n  121: 'f10',\r\n  122: 'f11',\r\n  123: 'f12',\r\n  144: 'numlock',\r\n  145: 'scroll',\r\n  191: '/',\r\n  224: 'meta',\r\n};\r\n","import { MODIFIER_KEYS, DISALLOWED_COMBINATIONS } from './hotkeysConfig';\r\n\r\nconst formatPressedKeys = pressedKeysArray => pressedKeysArray.join('+');\r\n\r\nconst findConflictingCommand = (hotkeys, currentCommandName, pressedKeys) => {\r\n  let firstConflictingCommand = undefined;\r\n  const formatedPressedHotkeys = formatPressedKeys(pressedKeys);\r\n\r\n  for (const commandName in hotkeys) {\r\n    const toolHotkeys = hotkeys[commandName].keys;\r\n    const formatedToolHotkeys = formatPressedKeys(toolHotkeys);\r\n\r\n    if (\r\n      formatedPressedHotkeys === formatedToolHotkeys &&\r\n      commandName !== currentCommandName\r\n    ) {\r\n      firstConflictingCommand = hotkeys[commandName];\r\n      break;\r\n    }\r\n  }\r\n\r\n  return firstConflictingCommand;\r\n};\r\n\r\nconst ERROR_MESSAGES = {\r\n  MODIFIER:\r\n    \"It's not possible to define only modifier keys (ctrl, alt and shift) as a shortcut\",\r\n  EMPTY: \"Field can't be empty.\",\r\n};\r\n\r\n// VALIDATORS\r\n\r\nconst modifierValidator = ({ pressedKeys }) => {\r\n  const lastPressedKey = pressedKeys[pressedKeys.length - 1];\r\n  // Check if it has a valid modifier\r\n  const isModifier = MODIFIER_KEYS.includes(lastPressedKey);\r\n  if (isModifier) {\r\n    return {\r\n      hasError: true,\r\n      errorMessage: ERROR_MESSAGES.MODIFIER,\r\n    };\r\n  }\r\n};\r\n\r\nconst emptyValidator = ({ pressedKeys = [] }) => {\r\n  if (!pressedKeys.length) {\r\n    return {\r\n      hasError: true,\r\n      errorMessage: ERROR_MESSAGES.EMPTY,\r\n    };\r\n  }\r\n};\r\n\r\nconst conflictingValidator = ({ commandName, pressedKeys, hotkeys }) => {\r\n  const conflictingCommand = findConflictingCommand(\r\n    hotkeys,\r\n    commandName,\r\n    pressedKeys\r\n  );\r\n\r\n  if (conflictingCommand) {\r\n    return {\r\n      hasError: true,\r\n      errorMessage: `\"${conflictingCommand.label}\" is already using the \"${pressedKeys}\" shortcut.`,\r\n    };\r\n  }\r\n};\r\n\r\nconst disallowedValidator = ({ pressedKeys = [] }) => {\r\n  const lastPressedKey = pressedKeys[pressedKeys.length - 1];\r\n  const modifierCommand = formatPressedKeys(\r\n    pressedKeys.slice(0, pressedKeys.length - 1)\r\n  );\r\n\r\n  const disallowedCombination = DISALLOWED_COMBINATIONS[modifierCommand];\r\n  const hasDisallowedCombinations = disallowedCombination\r\n    ? disallowedCombination.includes(lastPressedKey)\r\n    : false;\r\n\r\n  if (hasDisallowedCombinations) {\r\n    return {\r\n      hasError: true,\r\n      errorMessage: `\"${formatPressedKeys(\r\n        pressedKeys\r\n      )}\" shortcut combination is not allowed`,\r\n    };\r\n  }\r\n};\r\n\r\nconst hotkeysValidators = [\r\n  emptyValidator,\r\n  modifierValidator,\r\n  conflictingValidator,\r\n  disallowedValidator,\r\n];\r\n\r\nexport { hotkeysValidators };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nimport { useSnackbarContext, TabFooter, HotkeyField } from '@ohif/ui';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { hotkeysValidators } from './hotkeysValidators';\r\nimport { MODIFIER_KEYS } from './hotkeysConfig';\r\n\r\nimport { hotkeysManager } from '../../App';\r\n\r\nimport './HotkeysPreferences.styl';\r\n/**\r\n * Take hotkeyDefenintions and build an initialState to be used into the component state\r\n *\r\n * @param {Object} hotkeyDefinitions\r\n * @returns {Object} initialState\r\n */\r\nconst initialState = hotkeyDefinitions => ({\r\n  hotkeys: { ...hotkeyDefinitions },\r\n  errors: {},\r\n});\r\n/**\r\n * Take the updated command and keys and validate the changes with all validators\r\n *\r\n * @param {Object} arguments\r\n * @param {string} arguments.commandName command name string to be updated\r\n * @param {array} arguments.pressedKeys new array of keys to be added for the commandName\r\n * @param {array} arguments.hotkeys all hotkeys currently into the app\r\n * @returns {Object} {errorMessage} errorMessage coming from any of the validator or undefined if none\r\n */\r\nconst validateCommandKey = ({ commandName, pressedKeys, hotkeys }) => {\r\n  for (const validator of hotkeysValidators) {\r\n    const validation = validator({\r\n      commandName,\r\n      pressedKeys,\r\n      hotkeys,\r\n    });\r\n    if (validation && validation.hasError) {\r\n      return validation;\r\n    }\r\n  }\r\n\r\n  return {\r\n    errorMessage: undefined,\r\n  };\r\n};\r\n\r\n/**\r\n * Take all hotkeys and split the list into two lists\r\n *\r\n * @param {array} hotkeys list of all hotkeys\r\n * @returns {array} array containing two arrays of keys\r\n */\r\nconst splitHotkeys = hotkeys => {\r\n  const splitedHotkeys = [];\r\n  const arrayHotkeys = Object.entries(hotkeys);\r\n\r\n  if (arrayHotkeys.length) {\r\n    const halfwayThrough = Math.ceil(arrayHotkeys.length / 2);\r\n    splitedHotkeys.push(arrayHotkeys.slice(0, halfwayThrough));\r\n    splitedHotkeys.push(\r\n      arrayHotkeys.slice(halfwayThrough, arrayHotkeys.length)\r\n    );\r\n  }\r\n\r\n  return splitedHotkeys;\r\n};\r\n\r\n/**\r\n * HotkeysPreferences tab\r\n * It renders all hotkeys displayed into columns/rows\r\n *\r\n * It stores current state and whenever it changes, component messages parent of new value (through function callback)\r\n * @param {object} props component props\r\n * @param {string} props.onClose\r\n */\r\nfunction HotkeysPreferences({ onClose }) {\r\n  const { t } = useTranslation('UserPreferencesModal');\r\n  const { hotkeyDefaults, hotkeyDefinitions } = hotkeysManager;\r\n\r\n  const [state, setState] = useState(initialState(hotkeyDefinitions));\r\n\r\n  const snackbar = useSnackbarContext();\r\n\r\n  const onResetPreferences = () => {\r\n    const defaultHotKeyDefinitions = {};\r\n\r\n    hotkeyDefaults.map(item => {\r\n      const { commandName, ...values } = item;\r\n      defaultHotKeyDefinitions[commandName] = { ...values };\r\n    });\r\n\r\n    setState(initialState(defaultHotKeyDefinitions));\r\n  };\r\n\r\n  const onSave = () => {\r\n    const { hotkeys } = state;\r\n\r\n    hotkeysManager.setHotkeys(hotkeys);\r\n\r\n    localStorage.setItem('hotkey-definitions', JSON.stringify(hotkeys));\r\n\r\n    onClose();\r\n\r\n    snackbar.show({\r\n      message: t('SaveMessage'),\r\n      type: 'success',\r\n    });\r\n  };\r\n\r\n  const onHotkeyChanged = (commandName, hotkeyDefinition, keys) => {\r\n    const { errorMessage } = validateCommandKey({\r\n      commandName,\r\n      pressedKeys: keys,\r\n      hotkeys: state.hotkeys,\r\n    });\r\n\r\n    setState(prevState => ({\r\n      hotkeys: {\r\n        ...prevState.hotkeys,\r\n        [commandName]: { ...hotkeyDefinition, keys },\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [commandName]: errorMessage,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const hasErrors = Object.keys(state.errors).some(key => !!state.errors[key]);\r\n  const hasHotkeys = Object.keys(state.hotkeys).length;\r\n  const splitedHotkeys = splitHotkeys(state.hotkeys);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"HotkeysPreferences\">\r\n        {hasHotkeys ? (\r\n          <div className=\"hotkeyTable\">\r\n            {splitedHotkeys.map((hotkeys, index) => {\r\n              return (\r\n                <div className=\"hotkeyColumn\" key={index}>\r\n                  <div className=\"hotkeyHeader\">\r\n                    <div className=\"headerItemText text-right\">Function</div>\r\n                    <div className=\"headerItemText text-center\">Shortcut</div>\r\n                  </div>\r\n                  {hotkeys.map(hotkey => {\r\n                    const commandName = hotkey[0];\r\n                    const hotkeyDefinition = hotkey[1];\r\n                    const { keys, label } = hotkeyDefinition;\r\n                    const errorMessage = state.errors[hotkey[0]];\r\n                    const handleChange = keys => {\r\n                      onHotkeyChanged(commandName, hotkeyDefinition, keys);\r\n                    };\r\n\r\n                    return (\r\n                      <div key={commandName} className=\"hotkeyRow\">\r\n                        <div className=\"hotkeyLabel\">{label}</div>\r\n                        <div\r\n                          data-key=\"defaultTool\"\r\n                          className={classnames(\r\n                            'wrapperHotkeyInput',\r\n                            errorMessage ? 'stateError' : ''\r\n                          )}\r\n                        >\r\n                          <HotkeyField\r\n                            keys={keys}\r\n                            modifier_keys={MODIFIER_KEYS}\r\n                            handleChange={handleChange}\r\n                            classNames={'preferencesInput'}\r\n                          ></HotkeyField>\r\n                          <span className=\"preferencesInputErrorMessage\">\r\n                            {errorMessage}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          'Hotkeys definitions is empty'\r\n        )}\r\n      </div>\r\n      <TabFooter\r\n        onResetPreferences={onResetPreferences}\r\n        onSave={onSave}\r\n        onCancel={onClose}\r\n        hasErrors={hasErrors}\r\n        t={t}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHotkeysPreferences.propTypes = {\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport { HotkeysPreferences };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { redux } from '@ohif/core';\r\n\r\nimport { TabFooter, useSnackbarContext } from '@ohif/ui';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst { actions } = redux;\r\n\r\nimport './WindowLevelPreferences.styl';\r\n\r\nfunction WindowLevelPreferences({ onClose }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const windowLevelData = useSelector(state => {\r\n    const { preferences = {} } = state;\r\n    const { windowLevelData } = preferences;\r\n\r\n    return windowLevelData;\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    values: { ...windowLevelData },\r\n  });\r\n\r\n  const { t } = useTranslation('UserPreferencesModal');\r\n  const onResetPreferences = () => {};\r\n  const hasErrors = false;\r\n  const onSave = () => {\r\n    dispatch(actions.setUserPreferences({ windowLevelData: state.values }));\r\n\r\n    onClose();\r\n\r\n    snackbar.show({\r\n      message: t('SaveMessage'),\r\n      type: 'success',\r\n    });\r\n  };\r\n\r\n  const snackbar = useSnackbarContext();\r\n\r\n  const handleInputChange = event => {\r\n    const $target = event.target;\r\n    const { key, inputname } = $target.dataset;\r\n    const inputValue = $target.value;\r\n\r\n    if (!state.values[key] || !state.values[key][inputname]) {\r\n      return;\r\n    }\r\n\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [key]: {\r\n          ...prevState.values[key],\r\n          [inputname]: inputValue,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"WindowLevelPreferences\">\r\n        <div className=\"wlColumn\">\r\n          <div className=\"wlRow header\">\r\n            <div className=\"wlColumn preset\">Preset</div>\r\n            <div className=\"wlColumn description\">Description</div>\r\n            <div className=\"wlColumn window\">Window</div>\r\n            <div className=\"wlColumn level\">Level</div>\r\n          </div>\r\n          {Object.keys(state.values).map((key, index) => {\r\n            return (\r\n              <div className=\"wlRow\" key={key}>\r\n                <div className=\"wlColumn preset\">{key}</div>\r\n                <div className=\"wlColumn description\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"preferencesInput\"\r\n                    value={state.values[key].description}\r\n                    data-key={key}\r\n                    data-inputname=\"description\"\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n                <div className=\"wlColumn window\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"preferencesInput\"\r\n                    value={state.values[key].window}\r\n                    data-key={key}\r\n                    data-inputname=\"window\"\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n                <div className=\"wlColumn level\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"preferencesInput\"\r\n                    value={state.values[key].level}\r\n                    data-key={key}\r\n                    data-inputname=\"level\"\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <TabFooter\r\n        onResetPreferences={onResetPreferences}\r\n        onSave={onSave}\r\n        onCancel={onClose}\r\n        hasErrors={hasErrors}\r\n        t={t}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWindowLevelPreferences.propTypes = {\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport { WindowLevelPreferences };\r\n","import React, { useState, useSelector } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport i18n from '@ohif/i18n';\r\n\r\nimport { TabFooter, LanguageSwitcher, useSnackbarContext } from '@ohif/ui';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './GeneralPreferences.styl';\r\n\r\n/**\r\n * General Preferences tab\r\n * It renders the General Preferences content\r\n *\r\n * @param {object} props component props\r\n * @param {function} props.onClose\r\n */\r\nfunction GeneralPreferences({ onClose }) {\r\n  const { t } = useTranslation('UserPreferencesModal');\r\n  const snackbar = useSnackbarContext();\r\n  const currentLanguage = i18n.language;\r\n  const { availableLanguages } = i18n;\r\n\r\n  const [language, setLanguage] = useState(currentLanguage);\r\n\r\n  const onResetPreferences = () => {\r\n    setLanguage(i18n.defaultLanguage);\r\n  };\r\n\r\n  const onSave = () => {\r\n    i18n.changeLanguage(language);\r\n\r\n    onClose();\r\n\r\n    snackbar.show({\r\n      message: t('SaveMessage'),\r\n      type: 'success',\r\n    });\r\n  };\r\n\r\n  const hasErrors = false;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"GeneralPreferences\">\r\n        <div className=\"language\">\r\n          <label htmlFor=\"language-select\" className=\"languageLabel\">\r\n            Language\r\n          </label>\r\n          <LanguageSwitcher\r\n            language={language}\r\n            onLanguageChange={setLanguage}\r\n            languages={availableLanguages}\r\n          />\r\n        </div>\r\n      </div>\r\n      <TabFooter\r\n        onResetPreferences={onResetPreferences}\r\n        onSave={onSave}\r\n        onCancel={onClose}\r\n        hasErrors={hasErrors}\r\n        t={t}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nGeneralPreferences.propTypes = {\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport { GeneralPreferences };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { TabComponents } from '@ohif/ui';\r\n\r\n// Tabs\r\nimport { HotkeysPreferences } from './HotkeysPreferences';\r\nimport { WindowLevelPreferences } from './WindowLevelPreferences';\r\nimport { GeneralPreferences } from './GeneralPreferences';\r\n\r\nimport './UserPreferences.styl';\r\n\r\nconst tabs = [\r\n  {\r\n    name: 'Hotkeys',\r\n    Component: HotkeysPreferences,\r\n    customProps: {},\r\n  },\r\n  {\r\n    name: 'General',\r\n    Component: GeneralPreferences,\r\n    customProps: {},\r\n  },\r\n  {\r\n    name: 'Window Level',\r\n    Component: WindowLevelPreferences,\r\n    customProps: {},\r\n  },\r\n];\r\n\r\nfunction UserPreferences({ hide }) {\r\n  const customProps = {\r\n    onClose: hide,\r\n  };\r\n  return <TabComponents tabs={tabs} customProps={customProps} />;\r\n}\r\n\r\nUserPreferences.propTypes = {\r\n  hide: PropTypes.func,\r\n};\r\n\r\nexport { UserPreferences };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Dropdown, AboutContent, withModal } from '@ohif/ui';\r\n//\r\nimport { UserPreferences } from './../UserPreferences';\r\nimport OHIFLogo from '../OHIFLogo/OHIFLogo.js';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n  const {\r\n    t,\r\n    user,\r\n    userManager,\r\n    modal: { show },\r\n    useLargeLogo,\r\n    linkPath,\r\n    linkText,\r\n    location,\r\n    children,\r\n  } = props;\r\n\r\n  const [options, setOptions] = useState([]);\r\n  const hasLink = linkText && linkPath;\r\n\r\n  useEffect(() => {\r\n    const optionsValue = [\r\n      {\r\n        title: t('About'),\r\n        icon: { name: 'info' },\r\n        onClick: () =>\r\n          show({\r\n            content: AboutContent,\r\n            title: t('OHIF Viewer - About'),\r\n          }),\r\n      },\r\n      {\r\n        title: t('Preferences'),\r\n        icon: {\r\n          name: 'user',\r\n        },\r\n        onClick: () =>\r\n          show({\r\n            content: UserPreferences,\r\n            title: t('User Preferences'),\r\n          }),\r\n      },\r\n    ];\r\n\r\n    if (user && userManager) {\r\n      optionsValue.push({\r\n        title: t('Logout'),\r\n        icon: { name: 'power-off' },\r\n        onClick: () => userManager.signoutRedirect(),\r\n      });\r\n    }\r\n\r\n    setOptions(optionsValue);\r\n  }, [setOptions, show, t, user, userManager]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"notification-bar\">{t('INVESTIGATIONAL USE ONLY')}</div>\r\n      <div\r\n        className={classNames('entry-header', { 'header-big': useLargeLogo })}\r\n      >\r\n        <div className=\"header-left-box\">\r\n          {location && location.studyLink && (\r\n            <Link\r\n              to={location.studyLink}\r\n              className=\"header-btn header-viewerLink\"\r\n            >\r\n              {t('Back to Viewer')}\r\n            </Link>\r\n          )}\r\n\r\n          {children}\r\n\r\n          {hasLink && (\r\n            <Link\r\n              className=\"header-btn header-studyListLinkSection\"\r\n              to={{\r\n                pathname: linkPath,\r\n                state: { studyLink: location.pathname },\r\n              }}\r\n            >\r\n              {t(linkText)}\r\n            </Link>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"header-menu\">\r\n          <span className=\"research-use\">{t('INVESTIGATIONAL USE ONLY')}</span>\r\n          <Dropdown title={t('Options')} list={options} align=\"right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  // Study list, /\r\n  linkText: PropTypes.string,\r\n  linkPath: PropTypes.string,\r\n  useLargeLogo: PropTypes.bool,\r\n  //\r\n  location: PropTypes.object.isRequired,\r\n  children: PropTypes.node,\r\n  t: PropTypes.func.isRequired,\r\n  userManager: PropTypes.object,\r\n  user: PropTypes.object,\r\n  modal: PropTypes.object,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  useLargeLogo: false,\r\n  children: OHIFLogo(),\r\n};\r\n\r\nexport default withTranslation(['Header', 'AboutModal'])(\r\n  withRouter(withModal(Header))\r\n);\r\n","import Header from '../components/Header/Header.js';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.oidc && state.oidc.user,\r\n  };\r\n};\r\n\r\nconst ConnectedHeader = connect(mapStateToProps)(Header);\r\n\r\nexport default ConnectedHeader;\r\n"],"sourceRoot":""}